# This is a simple Makefile for compiling LaTeX documents.
# You'll find the original at https://github.com/pinga-lab/latex_makefile

# Based on the work of
# Joshua Ryan Smith (https://github.com/jrsmith3/latex_template)
# and
# Jason Hiebel (https://github.com/JasonHiebel/latex.makefile)

# CONFIGURATION
###############################################################################

# The name of the main .tex file to build.
# Other files can be included into this one.
PROJECT = manuscript
R1 = $(PROJECT)-marked-R1
# Folder where the figure files are (will assume they are EPS format)
FIGDIR = figures
# Folder where the BibTex .bib files are
BIBDIR = .
# Folder where the .cls .bst and .sty style files are
STYLEDIR = .
# Folder where output will be placed
OUTPUT = output

### File Types (for dependencies)
BIB = $(shell find $(BIBDIR) -maxdepth 1 -name '*.bib')
STY = $(shell find $(STYLEDIR) -maxdepth 1 -name '*.sty')
CLS = $(shell find $(STYLEDIR) -maxdepth 1 -name '*.cls')
BST = $(shell find $(STYLEDIR) -maxdepth 1 -name '*.bst')
EPS = $(shell find $(FIGDIR) -name '*.eps')
EXTRA = profiling.tex

### Compilation Flags
LATEX_FLAGS  = -halt-on-error -output-directory $(OUTPUT)/

### Standard PDF Viewers
UNAME := $(shell uname)
ifeq ($(UNAME), Linux)
PDFVIEWER = okular
endif
ifeq ($(UNAME), Darwin)
PDFVIEWER = open
endif


# MAIN TARGETS
###############################################################################

all: $(OUTPUT)/$(PROJECT).pdf

show: all
	@ # Redirect stdout and stderr to /dev/null for silent execution
	@ (${PDFVIEWER} $(OUTPUT)/$(PROJECT).pdf > /dev/null 2>&1 & )

wc: all
	@ pdftotext $(OUTPUT)/$(PROJECT).pdf - | wc -w

### Clean
# This target cleans the temporary files generated by the tex programs in
# use. All temporary files generated by this makefile will be placed in OUTPUT
# so cleanup is easy.
clean::
	rm -rf $(OUTPUT)/ *.aux
	rm -rf $(FIGS)/*-eps-converted-to.pdf

# Remove embedded fonts from the figure EPS files. The GJI system doesn't like
# them.
stripfonts:
	cd $(FIGS); bash strip-fonts.sh

# Convert images to PNG
pngs:
	cd $(FIGS); bash topng.sh


# BUILD THE SOURCES
###############################################################################
# Performs the typical build process for latex generations so that all
# references are resolved correctly. If adding components to this run-time
# always take caution and implement the worst case set of commands.
# Example: latex, bibtex, latex, latex
#
# Note the use of order-only prerequisites (prerequisites following the |).
# Order-only prerequisites do not affect the target -- if the order-only
# prerequisite has changed and none of the normal prerequisites have changed
# then this target IS NOT run.

$(OUTPUT)/:
	mkdir -p $(OUTPUT)/

$(OUTPUT)/%.aux: %.tex $(STY) $(CLS) $(EPS) $(EXTRA) | $(OUTPUT)/
	pdflatex $(LATEX_FLAGS) $<
	# Copy the aux file next to the tex file for Vim completion purposes
	cp $@ .

$(OUTPUT)/%.bbl: %.tex $(OUTPUT)/%.aux $(BIB) $(BST)
	cp $(BIB) $(OUTPUT)
	cp $(BST) $(OUTPUT)
	cd $(OUTPUT) && bibtex $(patsubst %.tex,%,$<)
	pdflatex $(LATEX_FLAGS) $<

$(OUTPUT)/%.pdf: %.tex $(OUTPUT)/%.aux $(OUTPUT)/%.bbl
	pdflatex $(LATEX_FLAGS) $< 1>/dev/null


# MAKE THE VERSION WITH MARKED DIFFERENCES
###############################################################################
r1: $(OUTPUT)/$(R1).pdf

$(R1).tex: $(PROJECT).tex $(STY) $(CLS) $(EPS) $(EXTRA) | $(OUTPUT)/
	git ldiff submission $< > $@
